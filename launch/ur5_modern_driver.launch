<?xml version="1.0"?>
<launch>

  <!-- GDB functionality -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <arg name="robot_ip" default="10.0.1.148" doc="IP of the controller" />
  <arg name="reverse_ip" default="10.0.1.118" doc="IP of the computer running the driver" />
  <arg name="reverse_port" default="50001"/>
  <arg name="min_payload"  default="0.0"/>
  <arg name="max_payload"  default="3.0"/>
  <arg name="prefix" default="" />
  <arg name="max_velocity" default="10.0"/> <!-- [rad/s] -->
  <arg name="base_frame" default="$(arg prefix)base" />
  <arg name="tool_frame" default="$(arg prefix)tool0_controller" />
  <arg name="shutdown_on_disconnect" default="true" />
  <arg name="controllers" default="joint_state_controller force_torque_sensor_controller pos_based_pos_traj_controller"/>
  <arg name="stopped_controllers" default="vel_based_pos_traj_controller joint_group_vel_controller"/>

  <!-- Maybe remove -->
  <arg name="kinematics_config" default="$(find picknik_ur5_moveit_config)/config/ur5_calibration.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
  <arg name="robot_description_file" default="$(find picknik_ur5_moveit_config)/launch/planning_context.launch" doc="Robot description launch file."/>
  <arg name="load_robot_description" default="true"/>
  <arg name="robot_description" default="robot_description"/>
  <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" />
  <arg name="limited" default="true" doc="Use the description in limited mode (Every axis rotates from -PI to PI)"/>
  <!-- robot model -->
  <include file="$(arg robot_description_file)">
    <arg name="kinematics_config" value="$(arg kinematics_config)"/>
    <arg name="load_robot_description" value="$(arg load_robot_description)"/>
    <arg name="robot_description" value="$(arg robot_description)"/>
    <arg name="transmission_hw_interface" value="$(arg transmission_hw_interface)"/>
    <arg name="limited" value="$(arg limited)"/>
  </include>
  <!-- Convert joint states to /tf tranforms -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <node pkg="tf" type="static_transform_publisher" name="tfdummy" args="0 0 0 0 0 0 /world /table 10" />
  <!-- End maybe remove -->

  <!-- Load hardware interface -->
  <node name="ur_hardware_interface" pkg="ur_modern_driver" type="ur_driver" output="log" launch-prefix="$(arg launch_prefix)">
    <param name="robot_ip_address" type="str" value="$(arg robot_ip)"/>
    <param name="reverse_ip_address" type="str" value="$(arg reverse_ip)" />
    <param name="reverse_port" type="int" value="$(arg reverse_port)" />
    <param name="min_payload" type="double" value="$(arg min_payload)"/>
    <param name="max_payload" type="double" value="$(arg max_payload)"/>
    <param name="max_velocity" type="double" value="$(arg max_velocity)"/>
    <param name="use_ros_control" type="bool" value="True"/>
    <param name="servoj_gain" type="double" value="750" />
    <param name="prefix" value="$(arg prefix)" />
    <param name="base_frame" type="str" value="$(arg base_frame)"/>
    <param name="tool_frame" type="str" value="$(arg tool_frame)"/>
    <param name="shutdown_on_disconnect" type="bool" value="$(arg shutdown_on_disconnect)"/>
  </node>

  <!-- Load controller settings -->
  <rosparam file="$(find ur_modern_driver)/config/ur5_controllers.yaml" command="load"/>

  <!-- spawn controller manager -->
  <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="$(arg controllers)" />

  <!-- load other controller -->
  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
    output="screen" args="load $(arg stopped_controllers)" />


</launch>
